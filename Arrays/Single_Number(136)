//BRUTE
LINEAR SEARCH

//BETTER
class Solution {
public:
    int singleNumber(vector<int>& nums) {
       int ans=0;
       map<int,int>mpp;
       int N=nums.size();
       for(int i=0; i<N; i++){
        mpp[nums[i]]++;
       }

       for(auto it=mpp.begin(); it!=mpp.end(); it++){
            if(it->second==1){
                ans=it->first;
                break;
            }
       }

       return ans;
    }
};

//OPTIMAL
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int XOR=0;
        for(int i=0; i<nums.size(); i++){
            XOR=XOR^nums[i];
        }

        return XOR;
    }
};
