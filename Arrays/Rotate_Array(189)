//BRUTE FORCE
class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int N=nums.size();
        k=k%N;
        vector<int>temp(k);

        for(int i=N-k; i<N; i++){
            temp[i-(N-k)]=nums[i];
        }

        for(int i=N-k-1; i>=0; i--){
            nums[i+k]=nums[i];
        }

        for(int i=0; i<k; i++){
            nums[i]=temp[i];
        }
    }
};

//OPTIMAL
class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int N=nums.size();
        k=k%N;
        reverse(nums.begin(),nums.end());
        reverse(nums.begin(),nums.begin()+k);
        reverse(nums.begin()+k,nums.end());
    }
};
