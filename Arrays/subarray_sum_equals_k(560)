//BRUTE
int findAllSubarraysWithGivenSum(vector < int > & arr, int k) {
    int count=0;
    int ans=0;
    int sum=0;
    int n=arr.size();
    for(int i=0; i<n ; i++){
        sum=0;
        for(int j=i; j<n; j++){
            sum=sum+arr[j];
            if(sum==k){
                count++;
            }
        }
    }
    return count;
}

//OPTIMAL
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int count=0;
        map<int,int>mpp;
        int sum=0;
        int N=nums.size();
        mpp[0]=1;
        for(int i=0; i<N; i++){
            sum=sum+nums[i];
            int extra=sum-k;
            count=count+mpp[extra];
            mpp[sum]++;
        }
        return count;
    }
};
